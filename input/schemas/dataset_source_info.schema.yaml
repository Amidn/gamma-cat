type: object
additionalProperties: false
properties:

  source_id:
    type: integer
    description: Unique source identifier integer in gamma-cat

  reference_id:
    type: string
    description: Dataset reference identifier

  telescope:
    "$ref": "#/definitions/telescope"

  data:
    type: object
    additionalProperties: false
    properties:
      livetime:
        type: number
        unit: hour
        description: TODO

      zenith:
        type: number
        unit: deg
        description: Mean zenith angle

      offset:
        type: number
        unit: deg
        description: Mean offset angle

      n_on:
        type: number
        unit: counts
        description: Number of events in the on region

      n_off:
        type: number
        unit: counts
        description: Number of events in the off region

      alpha:
        type: number
        description: TODO

      excess:
        type: number
        description: Excess (number of photons)

      significance:
        type: number
        description: Significance of the excess

  pos:
    type: object
    additionalProperties: false
    properties:
      ra:
        type: object
        additionalProperties: false
        description: |
          Right Ascension (ICRC or FK5 J2000, it's almost the same)
          Number in deg or string that can be parsed by Angle
        properties:
          val: {type: [number, string], description: Measured value}
          err: {type: [number, string], description: Statistical error}
          err_sys: {type: [number, string], description: Systematic error}

      dec:
        type: object
        additionalProperties: false
        description: |
          Declination (ICRC or FK5 J2000, it's almost the same)
          Number in deg or string that can be parsed by Angle
        properties:
          val: {type: [number, string], description: Measured value}
          err: {type: [number, string], description: Statistical error}
          err_sys: {type: [number, string], description: Systematic error}

      glon:
        type: object
        additionalProperties: false
        description: |
          Galactic longitude
          Number in deg or string that can be parsed by Angle
        properties:
          val: {type: [number, string], description: Measured value}
          err: {type: [number, string], description: Statistical error}
          err_sys: {type: [number, string], description: Systematic error}

      glat:
        type: object
        additionalProperties: false
        description: |
          Galactic latitude
          Number in deg or string that can be parsed by Angle
        properties:
          val: {type: [number, string], description: Measured value}
          err: {type: [number, string], description: Statistical error}
          err_sys: {type: [number, string], description: Systematic error}

  morph:
    type: object
    additionalProperties: false
    properties:
      type:
        "$ref": "#/definitions/morph_type"

      sigma:
        type: object
        additionalProperties: false
        description: |
          Width parameter (semantics type-dependent)
          String that can be parsed by Angle
        properties:
          val: {type: string, description: Measured value}
          err: {type: string, description: Statistical error}
          err_sys: {type: string, description: Systematic error}

      sigma2:
        type: object
        additionalProperties: false
        description: |
          Width parameter (semantics type-dependent)
          String that can be parsed by Angle
        properties:
          val: {type: string, description: Measured value}
          err: {type: string, description: Statistical error}
          err_sys: {type: string, description: Systematic error}

      pa:
        type: object
        additionalProperties: false
        unit: deg
        description: |
          Position angle
          String that can be parsed by Angle
        properties:
          frame: {enum: [radec, galactic]}
          val: {type: string, description: Measured value}
          err: {type: string, description: Statistical error}
          err_sys: {type: string, description: Systematic error}

  orbit:
    type: object
    additionalProperties: false
    properties:
      mjd0:
        type: number
        unit: day
        description: Zero phase for orbital period in MJD

      period:
        type: object
        additionalProperties: false
        description: Orbital period
        properties:
          val: {type: [number, string], description: Measured value}
          err: {type: [number, string], description: Statistical error}
          errp: {type: [number, string], description: Lower statistical error}
          errn: {type: [number, string], description: Upper statistical error}
          err_sys: {type: [number, string], description: Systematic error}

  spec:
    type: object
    additionalProperties: false
    properties:
      type:
        "$ref": "#/definitions/spec_type"

      theta:
        type: string
        description: Circular aperture photometry radius (parsed by Angle)

      erange:
        type: object
        additionalProperties: false
        description: TODO
        properties:
          min: {type: [number,  "null"], unit: TeV}
          max: {type: [number,  "null"], unit: TeV}

      norm:
        type: object
        additionalProperties: false
        unit: 1e-12 cm-2 s-1 TeV-1
        description: Flux norm parameter
        properties:
          val: {type: number, description: Measured value}
          err: {type: number, description: Statistical error}
          err_sys: {type: number, description: Systematic error}

      ref: {type: number, unit: TeV, description: Reference energy for norm}

      index:
        type: object
        additionalProperties: false
        unit: dimensionless
        description: Spectral index parameter
        properties:
          val: {type: number, description: Measured value}
          err: {type: number, description: Statistical error}
          err_sys: {type: number, description: Systematic error}

      ecut:
        type: object
        additionalProperties: false
        unit: TeV
        description: Cutoff energy parameter
        properties:
          val: {type: number}
          err: {type: number, description: Statistical error}
          err_sys: {type: number, description: Systematic error}

      covar:
        type: array
        description: |
          Covariance matrix
          TODO: decide on format.
          An example of a published covariance matrix is here: 2016arXiv161101863H

      # TODO: this duplicates the "telescope" key above.
      observatory:
        type: string
        description: Observatory name

      mjd:
        type: object
        additionalProperties: false
        description: TODO
        properties:
          min: {type: [number,  "null"], unit: day}
          max: {type: [number,  "null"], unit: day}

      phase:
        type: object
        additionalProperties: false
        description: TODO
        properties:
          min: {type: [number,  "null"]}
          max: {type: [number,  "null"]}

      filecounter:
        type: number
        description: Counter to connect spectral fit with SED file

  notes:
    type: string
    description: Hand-written, free-format notes

required:
  - source_id
  - reference_id
  - telescope
#  - morphology
#  - spectrum

definitions:

  telescope:
    enum:
      - hess
      - veritas
      - magic
      - whipple
      - hegra
      - cangaroo
      - hawc
      - milagro
      - crimea
      - argo
      - cat
    description: Telescope or instrument or observatory

  morph_type:
    enum:
      - point
      - gauss
      - shell
    description: Morphology type
    # The following description is just descriptive, not used in schema validation
    enum_values:
      - name: point
        description: See Delta2D in Gammapy
      - name: gauss
        description: See Gaussian2D in Gammapy
      - name: shell
        description: See Shell2D in Gammapy

  spec_type:
    enum:
      - pl
      - pl2
      - ecpl
    description: Spectrum type
    # The following description is just descriptive, not used in schema validation
    enum_values:
      - name: pl
        description: See PowerLaw in Gammapy
      - name: pl2
        description: See PowerLaw2 in Gammapy
      - name: ecpl
        description: See ExponentialCutoffPowerLaw in Gammapy

